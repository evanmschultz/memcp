[project]
    dependencies = [
        "graphiti-core>=0.8.2",
        "mcp>=1.5.0",
        "openai>=1.68.2",
        "pydantic>=2.6.0",
        "python-dotenv>=1.0.0",
        "rich>=14.0.0",
        # use tomli instead of tomllib (3.11+) standard library for python 3.10 compatibility
        "tomli-w>=1.0.0",
        "tomli>=2.0.1",
    ]
    description = "Graphiti based MCP Server for IDE memory"
    name = "memcp"
    readme = "README.md"
    requires-python = ">=3.10"
    version = "0.1.0"

[project.scripts]
    memcp = "memcp.cli:main"

[project.optional-dependencies]
    dev = [
        "mypy>=1.9.0",
        "pytest-asyncio>=0.23.5",
        "pytest-cov>=4.1.0",
        "pytest-mock>=3.12.0",
        "pytest>=8.0.0",
        "ruff>=0.3.0",
    ]

[build-system]
    build-backend = "hatchling.build"
    requires      = ["hatchling"]

[tool.ruff]
    ignore = [
        "ANN001", # Missing type annotation for self
        "D203",   # 1 blank line required before class docstring
        "D212",   # Multi-line docstring summary should start at the first line
    ]
    line-length = 120
    select = [
        "A",   # flake8-builtins
        "ANN", # flake8-annotations
        "B",   # flake8-bugbear
        "C4",  # flake8-comprehensions
        "D",   # pydocstyle
        "E",   # pycodestyle errors
        "F",   # pyflakes
        "I",   # isort
        "N",   # pep8-naming
        "S",   # flake8-bandit
        "UP",  # pyupgrade
        "W",   # pycodestyle warnings
    ]
    target-version = "py310"

[tool.ruff.pydocstyle]
    convention = "google"

[tool.ruff.isort]
    known-first-party = ["memcp"]
    section-order = [
        "first-party",
        "future",
        "local-folder",
        "standard-library",
        "third-party",
    ]

[tool.ruff.per-file-ignores]
    "**/*.py"       = ["D205"]
    "tests/**/*.py" = ["S101"]

[tool.mypy]
    check_untyped_defs          = true
    disallow_incomplete_defs    = true
    disallow_untyped_decorators = true
    disallow_untyped_defs       = true
    no_implicit_optional        = true
    plugins                     = ["pydantic.mypy"]
    python_version              = "3.10"
    strict_equality             = true
    warn_no_return              = true
    warn_redundant_casts        = true
    warn_return_any             = true
    warn_unreachable            = true
    warn_unused_configs         = true
    warn_unused_ignores         = true

[tool.pytest.ini_options]
    addopts      = "-ra -q --cov=memcp --cov-report=term-missing"
    asyncio_mode = "auto"
    minversion   = "8.0"
    testpaths    = ["tests"]

[tool.coverage.run]
    branch = true
    source = ["memcp"]

[tool.coverage.report]
    exclude_lines = [
        "def __repr__",
        "if __name__ == .__main__.:",
        "if self.debug:",
        "pass",
        "pragma: no cover",
        "raise ImportError",
        "raise NotImplementedError",
    ]
    fail_under = 80
    ignore_errors = true

[tool.hatch.build.targets.wheel]
    packages = ["memcp"]
